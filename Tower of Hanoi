//汉诺塔问题递归解法
#include <stdio.h>
#include <stdlib.h>
void move(int n,char a,char b,char c)
{
    if(n>0)
    {
        move(n-1,a,c,b);                //注意参数顺序变化
        printf("%c(%d)->%c\n",a,n,c);
        move(n-1,b,a,c);                //注意参数顺序变化
    }
}
int main()
{
    int n;
    char a='A',b='B',c='C';
    scanf("%d",&n);
    move(n,a,b,c);
    //printf("Hello world!\n");
    return 0;
}

//汉诺塔问题非递归解法
struct hanoi
{
    int id;
    char x,y,z;
}stack[30];
int main()
{
    int i=1,n;
    char ch;
    printf("Input number of diskes:\n");
    scanf("%d",&n);
    if(n==1)
        printf("A(1)->C\n");
    else
    {
        stack[1].id=n;
        stack[1].x='A';
        stack[1].y='B';
        stack[1].z='C';

        do
        {
            while(n>1)
            {
                n--;
                i++;
                stack[i].id=n;
                stack[i].x=stack[i-1].x;
                stack[i].y=stack[i-1].z;
                stack[i].z=stack[i-1].y;
            }
            printf("%c(%d)->%c\n",stack[i].x,stack[i].id,stack[i].z);
            i--;
            do
            {
                if(i>=1)
                    printf("%c(%d)->%c\n",stack[i].x,stack[i].id,stack[i].z);
                stack[i].id--;
                n=stack[i].id;
                if(n>=1)
                {
                    ch=stack[i].x;
                    stack[i].x=stack[i].y;
                    stack[i].y=ch;
                }
                if(n==1)
                {
                    printf("%c(%d)->%c\n",stack[i].x,stack[i].id,stack[i].z);
                    i--;
                }
            }while(n<=1&&i>0);
        }while(i>0);
    }
    return 0;
}
